version: 1
metadata:
  name: Flow - Default User Settings
context:
  name: User settings
  title: User settings
entries:
#~~~~~~~~~~~~~~~~~~~~~~~~~~~ Dependency blueprints ~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
- model: authentik_blueprints.metaapplyblueprint
  attrs:
    identifiers:
      name: Prompt - Username Without Duplicate Check Field
    required: true

- model: authentik_blueprints.metaapplyblueprint
  attrs:
    identifiers:
      name: Expression Policy - Validate username Context Attribute Is Unique to Current User
    required: true

- model: authentik_blueprints.metaapplyblueprint
  attrs:
    identifiers:
      name: Prompt - First and Last Name Fields
    required: true

- model: authentik_blueprints.metaapplyblueprint
  attrs:
    identifiers:
      name: Expression Policy - Create name Context Attribute From first_name and last_name Context Attributes
    required: true

- model: authentik_blueprints.metaapplyblueprint
  attrs:
    identifiers:
      name: Prompt - Email Field
    required: true

- model: authentik_blueprints.metaapplyblueprint
  attrs:
    identifiers:
      name: Expression Policy - Validate email Context Attribute Is Unique to Current User
    required: true

- model: authentik_blueprints.metaapplyblueprint
  attrs:
    identifiers:
      name: Prompt - Locale Field
    required: true

- model: authentik_blueprints.metaapplyblueprint
  attrs:
    identifiers:
      name: User Write Stage - Default
    required: true
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Groups ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Policies ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
- model: authentik_policies_expression.expressionpolicy
  id: default-user-settings-authorize-user-attribute-edit-expression-policy
  identifiers:
    name: default-user-settings-authorize-user-attribute-edit-expression-policy
  attrs:
    expression:  |
      from authentik.lib.config import CONFIG
      from authentik.core.models import (
          USER_ATTRIBUTE_CHANGE_EMAIL,
          USER_ATTRIBUTE_CHANGE_NAME,
          USER_ATTRIBUTE_CHANGE_USERNAME
      )
      prompt_data = request.context.get("prompt_data")

      if not request.user.group_attributes(request.http_request).get(
          USER_ATTRIBUTE_CHANGE_EMAIL, CONFIG.y_bool("default_user_change_email", True)
      ):
          if prompt_data.get("email") != request.user.email:
              ak_message("Not allowed to change email address.")
              return False

      if not request.user.group_attributes(request.http_request).get(
          USER_ATTRIBUTE_CHANGE_NAME, CONFIG.y_bool("default_user_change_name", True)
      ):
          if prompt_data.get("name") != request.user.name:
              ak_message("Not allowed to change name.")
              return False

      if not request.user.group_attributes(request.http_request).get(
          USER_ATTRIBUTE_CHANGE_USERNAME, CONFIG.y_bool("default_user_change_username", True)
      ):
          if prompt_data.get("username") != request.user.username:
              ak_message("Not allowed to change username.")
              return False

      return True
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Flows ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
- model: authentik_flows.flow
  id: flow
  identifiers:
    slug: default-user-settings-flow
  attrs:
    designation: stage_configuration
    name: !Context name
    title: !Context title
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Prompts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Stages ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
- model: authentik_stages_prompt.promptstage
  id: default-user-settings-prompt-stage
  identifiers:
    name: default-user-settings-prompt-stage
  attrs:
    fields:
    - !Find [authentik_stages_prompt.prompt, [field_key, username], [type, text]]
    - !Find [authentik_stages_prompt.prompt, [field_key, first_name]]
    - !Find [authentik_stages_prompt.prompt, [field_key, last_name]]
    - !Find [authentik_stages_prompt.prompt, [field_key, email]]
    - !Find [authentik_stages_prompt.prompt, [field_key, attributes.settings.locale]]
    validation_policies:
    - !KeyOf default-user-settings-authorize-user-attribute-edit-expression-policy
    - !Find [authentik_policies_expression.expressionpolicy, [name, create-name-context-attribute-from-first_name-and-last_name-context-attributes-expression-policy]]
    - !Find [authentik_policies_expression.expressionpolicy, [name, validate-username-context-attribute-is-unique-to-current-user-expression-policy]]
    - !Find [authentik_policies_expression.expressionpolicy, [name, validate-email-context-attribute-is-unique-to-current-user-expression-policy]]
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Stage bindings ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
- model: authentik_flows.flowstagebinding
  identifiers:
    stage: !KeyOf default-user-settings-prompt-stage
    target: !KeyOf flow
  attrs:
    order: 0

- model: authentik_flows.flowstagebinding
  identifiers:
    stage: !Find [authentik_stages_user_write.userwritestage, [name, default-user-write-stage]]
    target: !KeyOf flow
  attrs:
    order: 900
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Policy bindings ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Tenants ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
